// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: internal/protocol/message.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 实体类型
type EntityType int32

const (
	EntityType_PLAYER     EntityType = 0
	EntityType_PROJECTILE EntityType = 1
	EntityType_EFFECT     EntityType = 2
	EntityType_OBSTACLE   EntityType = 3
	EntityType_PICKUP     EntityType = 4
)

// Enum value maps for EntityType.
var (
	EntityType_name = map[int32]string{
		0: "PLAYER",
		1: "PROJECTILE",
		2: "EFFECT",
		3: "OBSTACLE",
		4: "PICKUP",
	}
	EntityType_value = map[string]int32{
		"PLAYER":     0,
		"PROJECTILE": 1,
		"EFFECT":     2,
		"OBSTACLE":   3,
		"PICKUP":     4,
	}
)

func (x EntityType) Enum() *EntityType {
	p := new(EntityType)
	*p = x
	return p
}

func (x EntityType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EntityType) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_protocol_message_proto_enumTypes[0].Descriptor()
}

func (EntityType) Type() protoreflect.EnumType {
	return &file_internal_protocol_message_proto_enumTypes[0]
}

func (x EntityType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EntityType.Descriptor instead.
func (EntityType) EnumDescriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{0}
}

// 技能类型
type SkillType int32

const (
	SkillType_SKILL_PROJECTILE SkillType = 0
	SkillType_SKILL_AOE        SkillType = 1
	SkillType_SKILL_BUFF       SkillType = 2
	SkillType_SKILL_DEBUFF     SkillType = 3
	SkillType_SKILL_MOVEMENT   SkillType = 4
	SkillType_SKILL_UTILITY    SkillType = 5
)

// Enum value maps for SkillType.
var (
	SkillType_name = map[int32]string{
		0: "SKILL_PROJECTILE",
		1: "SKILL_AOE",
		2: "SKILL_BUFF",
		3: "SKILL_DEBUFF",
		4: "SKILL_MOVEMENT",
		5: "SKILL_UTILITY",
	}
	SkillType_value = map[string]int32{
		"SKILL_PROJECTILE": 0,
		"SKILL_AOE":        1,
		"SKILL_BUFF":       2,
		"SKILL_DEBUFF":     3,
		"SKILL_MOVEMENT":   4,
		"SKILL_UTILITY":    5,
	}
)

func (x SkillType) Enum() *SkillType {
	p := new(SkillType)
	*p = x
	return p
}

func (x SkillType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SkillType) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_protocol_message_proto_enumTypes[1].Descriptor()
}

func (SkillType) Type() protoreflect.EnumType {
	return &file_internal_protocol_message_proto_enumTypes[1]
}

func (x SkillType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SkillType.Descriptor instead.
func (SkillType) EnumDescriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{1}
}

type MatchUpdate_Status int32

const (
	MatchUpdate_MATCHING MatchUpdate_Status = 0 // 匹配中
	MatchUpdate_MATCHED  MatchUpdate_Status = 1 // 匹配成功
	MatchUpdate_CANCELED MatchUpdate_Status = 2 // 已取消
	MatchUpdate_TIMEOUT  MatchUpdate_Status = 3 // 超时
)

// Enum value maps for MatchUpdate_Status.
var (
	MatchUpdate_Status_name = map[int32]string{
		0: "MATCHING",
		1: "MATCHED",
		2: "CANCELED",
		3: "TIMEOUT",
	}
	MatchUpdate_Status_value = map[string]int32{
		"MATCHING": 0,
		"MATCHED":  1,
		"CANCELED": 2,
		"TIMEOUT":  3,
	}
)

func (x MatchUpdate_Status) Enum() *MatchUpdate_Status {
	p := new(MatchUpdate_Status)
	*p = x
	return p
}

func (x MatchUpdate_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MatchUpdate_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_protocol_message_proto_enumTypes[2].Descriptor()
}

func (MatchUpdate_Status) Type() protoreflect.EnumType {
	return &file_internal_protocol_message_proto_enumTypes[2]
}

func (x MatchUpdate_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MatchUpdate_Status.Descriptor instead.
func (MatchUpdate_Status) EnumDescriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{6, 0}
}

// 通用响应
type Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      // 状态码，0表示成功
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // 响应消息
	Data          []byte                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`       // 响应数据
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_internal_protocol_message_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{0}
}

func (x *Response) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Response) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Response) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 向量2D
type Vector2D struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             float32                `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y             float32                `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Vector2D) Reset() {
	*x = Vector2D{}
	mi := &file_internal_protocol_message_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Vector2D) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vector2D) ProtoMessage() {}

func (x *Vector2D) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vector2D.ProtoReflect.Descriptor instead.
func (*Vector2D) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{1}
}

func (x *Vector2D) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Vector2D) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

// 登录请求
type LoginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	mi := &file_internal_protocol_message_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{2}
}

func (x *LoginRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// 登录响应
type LoginResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      int64                  `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Username      string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Level         int32                  `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	mi := &file_internal_protocol_message_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{3}
}

func (x *LoginResponse) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *LoginResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *LoginResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginResponse) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

// 注册请求
type RegisterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Email         string                 `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	mi := &file_internal_protocol_message_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{4}
}

func (x *RegisterRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RegisterRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RegisterRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

// 匹配请求
type MatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      int64                  `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	CharacterId   int32                  `protobuf:"varint,2,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	GameMode      string                 `protobuf:"bytes,3,opt,name=game_mode,json=gameMode,proto3" json:"game_mode,omitempty"` // 游戏模式
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchRequest) Reset() {
	*x = MatchRequest{}
	mi := &file_internal_protocol_message_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchRequest) ProtoMessage() {}

func (x *MatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchRequest.ProtoReflect.Descriptor instead.
func (*MatchRequest) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{5}
}

func (x *MatchRequest) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *MatchRequest) GetCharacterId() int32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *MatchRequest) GetGameMode() string {
	if x != nil {
		return x.GameMode
	}
	return ""
}

// 匹配状态更新
type MatchUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        MatchUpdate_Status     `protobuf:"varint,1,opt,name=status,proto3,enum=protocol.MatchUpdate_Status" json:"status,omitempty"`
	WaitingCount  int32                  `protobuf:"varint,2,opt,name=waiting_count,json=waitingCount,proto3" json:"waiting_count,omitempty"` // 等待人数
	RoomId        string                 `protobuf:"bytes,3,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`                    // 匹配成功时的房间ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchUpdate) Reset() {
	*x = MatchUpdate{}
	mi := &file_internal_protocol_message_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchUpdate) ProtoMessage() {}

func (x *MatchUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchUpdate.ProtoReflect.Descriptor instead.
func (*MatchUpdate) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{6}
}

func (x *MatchUpdate) GetStatus() MatchUpdate_Status {
	if x != nil {
		return x.Status
	}
	return MatchUpdate_MATCHING
}

func (x *MatchUpdate) GetWaitingCount() int32 {
	if x != nil {
		return x.WaitingCount
	}
	return 0
}

func (x *MatchUpdate) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

// 房间信息
type RoomInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Mode           string                 `protobuf:"bytes,3,opt,name=mode,proto3" json:"mode,omitempty"`
	Status         string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	MaxPlayers     int32                  `protobuf:"varint,5,opt,name=max_players,json=maxPlayers,proto3" json:"max_players,omitempty"`
	CurrentPlayers int32                  `protobuf:"varint,6,opt,name=current_players,json=currentPlayers,proto3" json:"current_players,omitempty"`
	MapId          int32                  `protobuf:"varint,7,opt,name=map_id,json=mapId,proto3" json:"map_id,omitempty"`
	PrivateRoom    bool                   `protobuf:"varint,8,opt,name=private_room,json=privateRoom,proto3" json:"private_room,omitempty"`
	Players        []*RoomPlayerInfo      `protobuf:"bytes,9,rep,name=players,proto3" json:"players,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RoomInfo) Reset() {
	*x = RoomInfo{}
	mi := &file_internal_protocol_message_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoomInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomInfo) ProtoMessage() {}

func (x *RoomInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomInfo.ProtoReflect.Descriptor instead.
func (*RoomInfo) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{7}
}

func (x *RoomInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RoomInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoomInfo) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *RoomInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *RoomInfo) GetMaxPlayers() int32 {
	if x != nil {
		return x.MaxPlayers
	}
	return 0
}

func (x *RoomInfo) GetCurrentPlayers() int32 {
	if x != nil {
		return x.CurrentPlayers
	}
	return 0
}

func (x *RoomInfo) GetMapId() int32 {
	if x != nil {
		return x.MapId
	}
	return 0
}

func (x *RoomInfo) GetPrivateRoom() bool {
	if x != nil {
		return x.PrivateRoom
	}
	return false
}

func (x *RoomInfo) GetPlayers() []*RoomPlayerInfo {
	if x != nil {
		return x.Players
	}
	return nil
}

// 房间内玩家信息
type RoomPlayerInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      int64                  `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	CharacterId   int32                  `protobuf:"varint,3,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	Team          int32                  `protobuf:"varint,4,opt,name=team,proto3" json:"team,omitempty"`
	Ready         bool                   `protobuf:"varint,5,opt,name=ready,proto3" json:"ready,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoomPlayerInfo) Reset() {
	*x = RoomPlayerInfo{}
	mi := &file_internal_protocol_message_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoomPlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomPlayerInfo) ProtoMessage() {}

func (x *RoomPlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomPlayerInfo.ProtoReflect.Descriptor instead.
func (*RoomPlayerInfo) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{8}
}

func (x *RoomPlayerInfo) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *RoomPlayerInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RoomPlayerInfo) GetCharacterId() int32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *RoomPlayerInfo) GetTeam() int32 {
	if x != nil {
		return x.Team
	}
	return 0
}

func (x *RoomPlayerInfo) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

// 创建房间请求
type CreateRoomRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Mode          string                 `protobuf:"bytes,2,opt,name=mode,proto3" json:"mode,omitempty"`
	MaxPlayers    int32                  `protobuf:"varint,3,opt,name=max_players,json=maxPlayers,proto3" json:"max_players,omitempty"`
	MapId         int32                  `protobuf:"varint,4,opt,name=map_id,json=mapId,proto3" json:"map_id,omitempty"`
	PrivateRoom   bool                   `protobuf:"varint,5,opt,name=private_room,json=privateRoom,proto3" json:"private_room,omitempty"`
	Password      string                 `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRoomRequest) Reset() {
	*x = CreateRoomRequest{}
	mi := &file_internal_protocol_message_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomRequest) ProtoMessage() {}

func (x *CreateRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomRequest.ProtoReflect.Descriptor instead.
func (*CreateRoomRequest) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{9}
}

func (x *CreateRoomRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRoomRequest) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *CreateRoomRequest) GetMaxPlayers() int32 {
	if x != nil {
		return x.MaxPlayers
	}
	return 0
}

func (x *CreateRoomRequest) GetMapId() int32 {
	if x != nil {
		return x.MapId
	}
	return 0
}

func (x *CreateRoomRequest) GetPrivateRoom() bool {
	if x != nil {
		return x.PrivateRoom
	}
	return false
}

func (x *CreateRoomRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// 加入房间请求
type JoinRoomRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	CharacterId   int32                  `protobuf:"varint,3,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinRoomRequest) Reset() {
	*x = JoinRoomRequest{}
	mi := &file_internal_protocol_message_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRoomRequest) ProtoMessage() {}

func (x *JoinRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRoomRequest.ProtoReflect.Descriptor instead.
func (*JoinRoomRequest) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{10}
}

func (x *JoinRoomRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *JoinRoomRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *JoinRoomRequest) GetCharacterId() int32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

// 实体基础信息
type EntityInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          EntityType             `protobuf:"varint,2,opt,name=type,proto3,enum=protocol.EntityType" json:"type,omitempty"`
	Position      *Vector2D              `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	Rotation      float32                `protobuf:"fixed32,4,opt,name=rotation,proto3" json:"rotation,omitempty"`
	Velocity      *Vector2D              `protobuf:"bytes,5,opt,name=velocity,proto3" json:"velocity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EntityInfo) Reset() {
	*x = EntityInfo{}
	mi := &file_internal_protocol_message_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntityInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityInfo) ProtoMessage() {}

func (x *EntityInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityInfo.ProtoReflect.Descriptor instead.
func (*EntityInfo) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{11}
}

func (x *EntityInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EntityInfo) GetType() EntityType {
	if x != nil {
		return x.Type
	}
	return EntityType_PLAYER
}

func (x *EntityInfo) GetPosition() *Vector2D {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *EntityInfo) GetRotation() float32 {
	if x != nil {
		return x.Rotation
	}
	return 0
}

func (x *EntityInfo) GetVelocity() *Vector2D {
	if x != nil {
		return x.Velocity
	}
	return nil
}

// 玩家实体
type PlayerEntityInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Base           *EntityInfo            `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	PlayerId       int64                  `protobuf:"varint,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	CharacterId    int32                  `protobuf:"varint,3,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	Team           int32                  `protobuf:"varint,4,opt,name=team,proto3" json:"team,omitempty"`
	Health         int32                  `protobuf:"varint,5,opt,name=health,proto3" json:"health,omitempty"`
	MaxHealth      int32                  `protobuf:"varint,6,opt,name=max_health,json=maxHealth,proto3" json:"max_health,omitempty"`
	IsAlive        bool                   `protobuf:"varint,7,opt,name=is_alive,json=isAlive,proto3" json:"is_alive,omitempty"`
	SkillCooldowns map[int32]float32      `protobuf:"bytes,8,rep,name=skill_cooldowns,json=skillCooldowns,proto3" json:"skill_cooldowns,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"` // 技能ID -> 冷却时间
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PlayerEntityInfo) Reset() {
	*x = PlayerEntityInfo{}
	mi := &file_internal_protocol_message_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerEntityInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerEntityInfo) ProtoMessage() {}

func (x *PlayerEntityInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerEntityInfo.ProtoReflect.Descriptor instead.
func (*PlayerEntityInfo) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{12}
}

func (x *PlayerEntityInfo) GetBase() *EntityInfo {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *PlayerEntityInfo) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *PlayerEntityInfo) GetCharacterId() int32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *PlayerEntityInfo) GetTeam() int32 {
	if x != nil {
		return x.Team
	}
	return 0
}

func (x *PlayerEntityInfo) GetHealth() int32 {
	if x != nil {
		return x.Health
	}
	return 0
}

func (x *PlayerEntityInfo) GetMaxHealth() int32 {
	if x != nil {
		return x.MaxHealth
	}
	return 0
}

func (x *PlayerEntityInfo) GetIsAlive() bool {
	if x != nil {
		return x.IsAlive
	}
	return false
}

func (x *PlayerEntityInfo) GetSkillCooldowns() map[int32]float32 {
	if x != nil {
		return x.SkillCooldowns
	}
	return nil
}

// 投射物实体
type ProjectileEntityInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Base          *EntityInfo            `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	OwnerId       string                 `protobuf:"bytes,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	SkillId       int32                  `protobuf:"varint,3,opt,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"`
	Damage        int32                  `protobuf:"varint,4,opt,name=damage,proto3" json:"damage,omitempty"`
	LifeTime      float32                `protobuf:"fixed32,5,opt,name=life_time,json=lifeTime,proto3" json:"life_time,omitempty"`
	HitEntities   []string               `protobuf:"bytes,6,rep,name=hit_entities,json=hitEntities,proto3" json:"hit_entities,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectileEntityInfo) Reset() {
	*x = ProjectileEntityInfo{}
	mi := &file_internal_protocol_message_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectileEntityInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectileEntityInfo) ProtoMessage() {}

func (x *ProjectileEntityInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectileEntityInfo.ProtoReflect.Descriptor instead.
func (*ProjectileEntityInfo) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{13}
}

func (x *ProjectileEntityInfo) GetBase() *EntityInfo {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *ProjectileEntityInfo) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *ProjectileEntityInfo) GetSkillId() int32 {
	if x != nil {
		return x.SkillId
	}
	return 0
}

func (x *ProjectileEntityInfo) GetDamage() int32 {
	if x != nil {
		return x.Damage
	}
	return 0
}

func (x *ProjectileEntityInfo) GetLifeTime() float32 {
	if x != nil {
		return x.LifeTime
	}
	return 0
}

func (x *ProjectileEntityInfo) GetHitEntities() []string {
	if x != nil {
		return x.HitEntities
	}
	return nil
}

// 移动操作
type MoveOperation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Direction     *Vector2D              `protobuf:"bytes,1,opt,name=direction,proto3" json:"direction,omitempty"` // 移动方向向量，归一化
	Speed         float32                `protobuf:"fixed32,2,opt,name=speed,proto3" json:"speed,omitempty"`       // 移动速度
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveOperation) Reset() {
	*x = MoveOperation{}
	mi := &file_internal_protocol_message_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveOperation) ProtoMessage() {}

func (x *MoveOperation) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveOperation.ProtoReflect.Descriptor instead.
func (*MoveOperation) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{14}
}

func (x *MoveOperation) GetDirection() *Vector2D {
	if x != nil {
		return x.Direction
	}
	return nil
}

func (x *MoveOperation) GetSpeed() float32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

// 旋转操作
type RotateOperation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rotation      float32                `protobuf:"fixed32,1,opt,name=rotation,proto3" json:"rotation,omitempty"` // 旋转角度(0-360)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RotateOperation) Reset() {
	*x = RotateOperation{}
	mi := &file_internal_protocol_message_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RotateOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotateOperation) ProtoMessage() {}

func (x *RotateOperation) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RotateOperation.ProtoReflect.Descriptor instead.
func (*RotateOperation) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{15}
}

func (x *RotateOperation) GetRotation() float32 {
	if x != nil {
		return x.Rotation
	}
	return 0
}

// 技能操作
type SkillOperation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SkillId       int32                  `protobuf:"varint,1,opt,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"` // 技能ID
	Target        *Vector2D              `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`                   // 目标位置
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SkillOperation) Reset() {
	*x = SkillOperation{}
	mi := &file_internal_protocol_message_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SkillOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkillOperation) ProtoMessage() {}

func (x *SkillOperation) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkillOperation.ProtoReflect.Descriptor instead.
func (*SkillOperation) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{16}
}

func (x *SkillOperation) GetSkillId() int32 {
	if x != nil {
		return x.SkillId
	}
	return 0
}

func (x *SkillOperation) GetTarget() *Vector2D {
	if x != nil {
		return x.Target
	}
	return nil
}

// 玩家输入包
type PlayerInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // 客户端时间戳
	Move          *MoveOperation         `protobuf:"bytes,2,opt,name=move,proto3" json:"move,omitempty"`
	Rotate        *RotateOperation       `protobuf:"bytes,3,opt,name=rotate,proto3" json:"rotate,omitempty"`
	Skill         *SkillOperation        `protobuf:"bytes,4,opt,name=skill,proto3" json:"skill,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerInput) Reset() {
	*x = PlayerInput{}
	mi := &file_internal_protocol_message_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInput) ProtoMessage() {}

func (x *PlayerInput) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInput.ProtoReflect.Descriptor instead.
func (*PlayerInput) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{17}
}

func (x *PlayerInput) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *PlayerInput) GetMove() *MoveOperation {
	if x != nil {
		return x.Move
	}
	return nil
}

func (x *PlayerInput) GetRotate() *RotateOperation {
	if x != nil {
		return x.Rotate
	}
	return nil
}

func (x *PlayerInput) GetSkill() *SkillOperation {
	if x != nil {
		return x.Skill
	}
	return nil
}

// 游戏帧
type GameFrame struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FrameId       int64                  `protobuf:"varint,1,opt,name=frame_id,json=frameId,proto3" json:"frame_id,omitempty"` // 帧ID
	Timestamp     int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`            // 服务器时间戳
	Entities      []*EntityInfo          `protobuf:"bytes,3,rep,name=entities,proto3" json:"entities,omitempty"`
	Collisions    []*CollisionEvent      `protobuf:"bytes,4,rep,name=collisions,proto3" json:"collisions,omitempty"`
	Scores        map[int64]int32        `protobuf:"bytes,5,rep,name=scores,proto3" json:"scores,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // 玩家ID -> 分数
	RemainingTime int32                  `protobuf:"varint,6,opt,name=remaining_time,json=remainingTime,proto3" json:"remaining_time,omitempty"`                                         // 剩余时间(秒)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameFrame) Reset() {
	*x = GameFrame{}
	mi := &file_internal_protocol_message_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameFrame) ProtoMessage() {}

func (x *GameFrame) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameFrame.ProtoReflect.Descriptor instead.
func (*GameFrame) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{18}
}

func (x *GameFrame) GetFrameId() int64 {
	if x != nil {
		return x.FrameId
	}
	return 0
}

func (x *GameFrame) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *GameFrame) GetEntities() []*EntityInfo {
	if x != nil {
		return x.Entities
	}
	return nil
}

func (x *GameFrame) GetCollisions() []*CollisionEvent {
	if x != nil {
		return x.Collisions
	}
	return nil
}

func (x *GameFrame) GetScores() map[int64]int32 {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (x *GameFrame) GetRemainingTime() int32 {
	if x != nil {
		return x.RemainingTime
	}
	return 0
}

// 碰撞事件
type CollisionEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EntityA       string                 `protobuf:"bytes,1,opt,name=entity_a,json=entityA,proto3" json:"entity_a,omitempty"`
	EntityB       string                 `protobuf:"bytes,2,opt,name=entity_b,json=entityB,proto3" json:"entity_b,omitempty"`
	Position      *Vector2D              `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	Damage        int32                  `protobuf:"varint,4,opt,name=damage,proto3" json:"damage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CollisionEvent) Reset() {
	*x = CollisionEvent{}
	mi := &file_internal_protocol_message_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollisionEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollisionEvent) ProtoMessage() {}

func (x *CollisionEvent) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollisionEvent.ProtoReflect.Descriptor instead.
func (*CollisionEvent) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{19}
}

func (x *CollisionEvent) GetEntityA() string {
	if x != nil {
		return x.EntityA
	}
	return ""
}

func (x *CollisionEvent) GetEntityB() string {
	if x != nil {
		return x.EntityB
	}
	return ""
}

func (x *CollisionEvent) GetPosition() *Vector2D {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *CollisionEvent) GetDamage() int32 {
	if x != nil {
		return x.Damage
	}
	return 0
}

// 游戏结果
type GameResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	StartTime     int64                  `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       int64                  `protobuf:"varint,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	WinningTeam   string                 `protobuf:"bytes,4,opt,name=winning_team,json=winningTeam,proto3" json:"winning_team,omitempty"`
	Players       []*PlayerResult        `protobuf:"bytes,5,rep,name=players,proto3" json:"players,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameResult) Reset() {
	*x = GameResult{}
	mi := &file_internal_protocol_message_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameResult) ProtoMessage() {}

func (x *GameResult) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameResult.ProtoReflect.Descriptor instead.
func (*GameResult) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{20}
}

func (x *GameResult) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *GameResult) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GameResult) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *GameResult) GetWinningTeam() string {
	if x != nil {
		return x.WinningTeam
	}
	return ""
}

func (x *GameResult) GetPlayers() []*PlayerResult {
	if x != nil {
		return x.Players
	}
	return nil
}

// 玩家游戏结果
type PlayerResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      int64                  `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Team          int32                  `protobuf:"varint,3,opt,name=team,proto3" json:"team,omitempty"`
	Score         int32                  `protobuf:"varint,4,opt,name=score,proto3" json:"score,omitempty"`
	Kills         int32                  `protobuf:"varint,5,opt,name=kills,proto3" json:"kills,omitempty"`
	Deaths        int32                  `protobuf:"varint,6,opt,name=deaths,proto3" json:"deaths,omitempty"`
	Assists       int32                  `protobuf:"varint,7,opt,name=assists,proto3" json:"assists,omitempty"`
	ExpGained     int32                  `protobuf:"varint,8,opt,name=exp_gained,json=expGained,proto3" json:"exp_gained,omitempty"`
	CoinsGained   int32                  `protobuf:"varint,9,opt,name=coins_gained,json=coinsGained,proto3" json:"coins_gained,omitempty"`
	Mvp           bool                   `protobuf:"varint,10,opt,name=mvp,proto3" json:"mvp,omitempty"`
	PlayTime      int32                  `protobuf:"varint,11,opt,name=play_time,json=playTime,proto3" json:"play_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerResult) Reset() {
	*x = PlayerResult{}
	mi := &file_internal_protocol_message_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerResult) ProtoMessage() {}

func (x *PlayerResult) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerResult.ProtoReflect.Descriptor instead.
func (*PlayerResult) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{21}
}

func (x *PlayerResult) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *PlayerResult) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *PlayerResult) GetTeam() int32 {
	if x != nil {
		return x.Team
	}
	return 0
}

func (x *PlayerResult) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *PlayerResult) GetKills() int32 {
	if x != nil {
		return x.Kills
	}
	return 0
}

func (x *PlayerResult) GetDeaths() int32 {
	if x != nil {
		return x.Deaths
	}
	return 0
}

func (x *PlayerResult) GetAssists() int32 {
	if x != nil {
		return x.Assists
	}
	return 0
}

func (x *PlayerResult) GetExpGained() int32 {
	if x != nil {
		return x.ExpGained
	}
	return 0
}

func (x *PlayerResult) GetCoinsGained() int32 {
	if x != nil {
		return x.CoinsGained
	}
	return 0
}

func (x *PlayerResult) GetMvp() bool {
	if x != nil {
		return x.Mvp
	}
	return false
}

func (x *PlayerResult) GetPlayTime() int32 {
	if x != nil {
		return x.PlayTime
	}
	return 0
}

// 技能信息
type SkillInfo struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description      string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Type             SkillType              `protobuf:"varint,4,opt,name=type,proto3,enum=protocol.SkillType" json:"type,omitempty"`
	Damage           int32                  `protobuf:"varint,5,opt,name=damage,proto3" json:"damage,omitempty"`
	CooldownTime     float32                `protobuf:"fixed32,6,opt,name=cooldown_time,json=cooldownTime,proto3" json:"cooldown_time,omitempty"`
	Range            float32                `protobuf:"fixed32,7,opt,name=range,proto3" json:"range,omitempty"`
	EffectTime       float32                `protobuf:"fixed32,8,opt,name=effect_time,json=effectTime,proto3" json:"effect_time,omitempty"`
	ProjectileSpeed  float32                `protobuf:"fixed32,9,opt,name=projectile_speed,json=projectileSpeed,proto3" json:"projectile_speed,omitempty"`
	ProjectileCount  int32                  `protobuf:"varint,10,opt,name=projectile_count,json=projectileCount,proto3" json:"projectile_count,omitempty"`
	ProjectileSpread float32                `protobuf:"fixed32,11,opt,name=projectile_spread,json=projectileSpread,proto3" json:"projectile_spread,omitempty"`
	AnimationKey     string                 `protobuf:"bytes,12,opt,name=animation_key,json=animationKey,proto3" json:"animation_key,omitempty"`
	EffectKey        string                 `protobuf:"bytes,13,opt,name=effect_key,json=effectKey,proto3" json:"effect_key,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SkillInfo) Reset() {
	*x = SkillInfo{}
	mi := &file_internal_protocol_message_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SkillInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkillInfo) ProtoMessage() {}

func (x *SkillInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkillInfo.ProtoReflect.Descriptor instead.
func (*SkillInfo) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{22}
}

func (x *SkillInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SkillInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SkillInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SkillInfo) GetType() SkillType {
	if x != nil {
		return x.Type
	}
	return SkillType_SKILL_PROJECTILE
}

func (x *SkillInfo) GetDamage() int32 {
	if x != nil {
		return x.Damage
	}
	return 0
}

func (x *SkillInfo) GetCooldownTime() float32 {
	if x != nil {
		return x.CooldownTime
	}
	return 0
}

func (x *SkillInfo) GetRange() float32 {
	if x != nil {
		return x.Range
	}
	return 0
}

func (x *SkillInfo) GetEffectTime() float32 {
	if x != nil {
		return x.EffectTime
	}
	return 0
}

func (x *SkillInfo) GetProjectileSpeed() float32 {
	if x != nil {
		return x.ProjectileSpeed
	}
	return 0
}

func (x *SkillInfo) GetProjectileCount() int32 {
	if x != nil {
		return x.ProjectileCount
	}
	return 0
}

func (x *SkillInfo) GetProjectileSpread() float32 {
	if x != nil {
		return x.ProjectileSpread
	}
	return 0
}

func (x *SkillInfo) GetAnimationKey() string {
	if x != nil {
		return x.AnimationKey
	}
	return ""
}

func (x *SkillInfo) GetEffectKey() string {
	if x != nil {
		return x.EffectKey
	}
	return ""
}

// 角色信息
type CharacterInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description    string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	MaxHp          int32                  `protobuf:"varint,4,opt,name=max_hp,json=maxHp,proto3" json:"max_hp,omitempty"`
	Speed          float32                `protobuf:"fixed32,5,opt,name=speed,proto3" json:"speed,omitempty"`
	BaseAttack     int32                  `protobuf:"varint,6,opt,name=base_attack,json=baseAttack,proto3" json:"base_attack,omitempty"`
	BaseDefense    int32                  `protobuf:"varint,7,opt,name=base_defense,json=baseDefense,proto3" json:"base_defense,omitempty"`
	SpecialAbility string                 `protobuf:"bytes,8,opt,name=special_ability,json=specialAbility,proto3" json:"special_ability,omitempty"`
	Skills         []*SkillInfo           `protobuf:"bytes,9,rep,name=skills,proto3" json:"skills,omitempty"`
	Difficulty     int32                  `protobuf:"varint,10,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	Role           string                 `protobuf:"bytes,11,opt,name=role,proto3" json:"role,omitempty"`
	Unlockable     bool                   `protobuf:"varint,12,opt,name=unlockable,proto3" json:"unlockable,omitempty"`
	UnlockCost     int32                  `protobuf:"varint,13,opt,name=unlock_cost,json=unlockCost,proto3" json:"unlock_cost,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CharacterInfo) Reset() {
	*x = CharacterInfo{}
	mi := &file_internal_protocol_message_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CharacterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterInfo) ProtoMessage() {}

func (x *CharacterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterInfo.ProtoReflect.Descriptor instead.
func (*CharacterInfo) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{23}
}

func (x *CharacterInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CharacterInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CharacterInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CharacterInfo) GetMaxHp() int32 {
	if x != nil {
		return x.MaxHp
	}
	return 0
}

func (x *CharacterInfo) GetSpeed() float32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *CharacterInfo) GetBaseAttack() int32 {
	if x != nil {
		return x.BaseAttack
	}
	return 0
}

func (x *CharacterInfo) GetBaseDefense() int32 {
	if x != nil {
		return x.BaseDefense
	}
	return 0
}

func (x *CharacterInfo) GetSpecialAbility() string {
	if x != nil {
		return x.SpecialAbility
	}
	return ""
}

func (x *CharacterInfo) GetSkills() []*SkillInfo {
	if x != nil {
		return x.Skills
	}
	return nil
}

func (x *CharacterInfo) GetDifficulty() int32 {
	if x != nil {
		return x.Difficulty
	}
	return 0
}

func (x *CharacterInfo) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *CharacterInfo) GetUnlockable() bool {
	if x != nil {
		return x.Unlockable
	}
	return false
}

func (x *CharacterInfo) GetUnlockCost() int32 {
	if x != nil {
		return x.UnlockCost
	}
	return 0
}

// 玩家角色信息
type PlayerCharacterInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      int64                  `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	CharacterId   int32                  `protobuf:"varint,2,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	Level         int32                  `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`
	Exp           int32                  `protobuf:"varint,4,opt,name=exp,proto3" json:"exp,omitempty"`
	Unlocked      bool                   `protobuf:"varint,5,opt,name=unlocked,proto3" json:"unlocked,omitempty"`
	UsageCount    int32                  `protobuf:"varint,6,opt,name=usage_count,json=usageCount,proto3" json:"usage_count,omitempty"`
	WinCount      int32                  `protobuf:"varint,7,opt,name=win_count,json=winCount,proto3" json:"win_count,omitempty"`
	KillCount     int32                  `protobuf:"varint,8,opt,name=kill_count,json=killCount,proto3" json:"kill_count,omitempty"`
	DeathCount    int32                  `protobuf:"varint,9,opt,name=death_count,json=deathCount,proto3" json:"death_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerCharacterInfo) Reset() {
	*x = PlayerCharacterInfo{}
	mi := &file_internal_protocol_message_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerCharacterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerCharacterInfo) ProtoMessage() {}

func (x *PlayerCharacterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerCharacterInfo.ProtoReflect.Descriptor instead.
func (*PlayerCharacterInfo) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{24}
}

func (x *PlayerCharacterInfo) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *PlayerCharacterInfo) GetCharacterId() int32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *PlayerCharacterInfo) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *PlayerCharacterInfo) GetExp() int32 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *PlayerCharacterInfo) GetUnlocked() bool {
	if x != nil {
		return x.Unlocked
	}
	return false
}

func (x *PlayerCharacterInfo) GetUsageCount() int32 {
	if x != nil {
		return x.UsageCount
	}
	return 0
}

func (x *PlayerCharacterInfo) GetWinCount() int32 {
	if x != nil {
		return x.WinCount
	}
	return 0
}

func (x *PlayerCharacterInfo) GetKillCount() int32 {
	if x != nil {
		return x.KillCount
	}
	return 0
}

func (x *PlayerCharacterInfo) GetDeathCount() int32 {
	if x != nil {
		return x.DeathCount
	}
	return 0
}

// 角色解锁条件
type CharacterUnlockRequirement struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	CharacterId     int32                  `protobuf:"varint,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	RequiredLevel   int32                  `protobuf:"varint,2,opt,name=required_level,json=requiredLevel,proto3" json:"required_level,omitempty"`
	RequiredCoins   int64                  `protobuf:"varint,3,opt,name=required_coins,json=requiredCoins,proto3" json:"required_coins,omitempty"`
	RequiredGems    int64                  `protobuf:"varint,4,opt,name=required_gems,json=requiredGems,proto3" json:"required_gems,omitempty"`
	RequiredMatches int32                  `protobuf:"varint,5,opt,name=required_matches,json=requiredMatches,proto3" json:"required_matches,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CharacterUnlockRequirement) Reset() {
	*x = CharacterUnlockRequirement{}
	mi := &file_internal_protocol_message_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CharacterUnlockRequirement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterUnlockRequirement) ProtoMessage() {}

func (x *CharacterUnlockRequirement) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterUnlockRequirement.ProtoReflect.Descriptor instead.
func (*CharacterUnlockRequirement) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{25}
}

func (x *CharacterUnlockRequirement) GetCharacterId() int32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *CharacterUnlockRequirement) GetRequiredLevel() int32 {
	if x != nil {
		return x.RequiredLevel
	}
	return 0
}

func (x *CharacterUnlockRequirement) GetRequiredCoins() int64 {
	if x != nil {
		return x.RequiredCoins
	}
	return 0
}

func (x *CharacterUnlockRequirement) GetRequiredGems() int64 {
	if x != nil {
		return x.RequiredGems
	}
	return 0
}

func (x *CharacterUnlockRequirement) GetRequiredMatches() int32 {
	if x != nil {
		return x.RequiredMatches
	}
	return 0
}

// 玩家资料
type PlayerProfile struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username         string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Email            string                 `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	CreatedAt        int64                  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt        int64                  `protobuf:"varint,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Level            int32                  `protobuf:"varint,6,opt,name=level,proto3" json:"level,omitempty"`
	Exp              int64                  `protobuf:"varint,7,opt,name=exp,proto3" json:"exp,omitempty"`
	Coins            int64                  `protobuf:"varint,8,opt,name=coins,proto3" json:"coins,omitempty"`
	Gems             int64                  `protobuf:"varint,9,opt,name=gems,proto3" json:"gems,omitempty"`
	TotalKills       int32                  `protobuf:"varint,10,opt,name=total_kills,json=totalKills,proto3" json:"total_kills,omitempty"`
	TotalDeaths      int32                  `protobuf:"varint,11,opt,name=total_deaths,json=totalDeaths,proto3" json:"total_deaths,omitempty"`
	TotalAssists     int32                  `protobuf:"varint,12,opt,name=total_assists,json=totalAssists,proto3" json:"total_assists,omitempty"`
	TotalMatches     int32                  `protobuf:"varint,13,opt,name=total_matches,json=totalMatches,proto3" json:"total_matches,omitempty"`
	TotalWins        int32                  `protobuf:"varint,14,opt,name=total_wins,json=totalWins,proto3" json:"total_wins,omitempty"`
	Characters       []*PlayerCharacterInfo `protobuf:"bytes,15,rep,name=characters,proto3" json:"characters,omitempty"`
	DefaultCharacter *CharacterInfo         `protobuf:"bytes,16,opt,name=default_character,json=defaultCharacter,proto3" json:"default_character,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PlayerProfile) Reset() {
	*x = PlayerProfile{}
	mi := &file_internal_protocol_message_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerProfile) ProtoMessage() {}

func (x *PlayerProfile) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerProfile.ProtoReflect.Descriptor instead.
func (*PlayerProfile) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{26}
}

func (x *PlayerProfile) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PlayerProfile) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *PlayerProfile) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *PlayerProfile) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *PlayerProfile) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *PlayerProfile) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *PlayerProfile) GetExp() int64 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *PlayerProfile) GetCoins() int64 {
	if x != nil {
		return x.Coins
	}
	return 0
}

func (x *PlayerProfile) GetGems() int64 {
	if x != nil {
		return x.Gems
	}
	return 0
}

func (x *PlayerProfile) GetTotalKills() int32 {
	if x != nil {
		return x.TotalKills
	}
	return 0
}

func (x *PlayerProfile) GetTotalDeaths() int32 {
	if x != nil {
		return x.TotalDeaths
	}
	return 0
}

func (x *PlayerProfile) GetTotalAssists() int32 {
	if x != nil {
		return x.TotalAssists
	}
	return 0
}

func (x *PlayerProfile) GetTotalMatches() int32 {
	if x != nil {
		return x.TotalMatches
	}
	return 0
}

func (x *PlayerProfile) GetTotalWins() int32 {
	if x != nil {
		return x.TotalWins
	}
	return 0
}

func (x *PlayerProfile) GetCharacters() []*PlayerCharacterInfo {
	if x != nil {
		return x.Characters
	}
	return nil
}

func (x *PlayerProfile) GetDefaultCharacter() *CharacterInfo {
	if x != nil {
		return x.DefaultCharacter
	}
	return nil
}

// 对局记录
type MatchRecord struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	GameMode      string                 `protobuf:"bytes,2,opt,name=game_mode,json=gameMode,proto3" json:"game_mode,omitempty"`
	StartTime     int64                  `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       int64                  `protobuf:"varint,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	WinningTeam   int32                  `protobuf:"varint,5,opt,name=winning_team,json=winningTeam,proto3" json:"winning_team,omitempty"`
	MapId         int32                  `protobuf:"varint,6,opt,name=map_id,json=mapId,proto3" json:"map_id,omitempty"`
	Duration      int32                  `protobuf:"varint,7,opt,name=duration,proto3" json:"duration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchRecord) Reset() {
	*x = MatchRecord{}
	mi := &file_internal_protocol_message_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchRecord) ProtoMessage() {}

func (x *MatchRecord) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchRecord.ProtoReflect.Descriptor instead.
func (*MatchRecord) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{27}
}

func (x *MatchRecord) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MatchRecord) GetGameMode() string {
	if x != nil {
		return x.GameMode
	}
	return ""
}

func (x *MatchRecord) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *MatchRecord) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *MatchRecord) GetWinningTeam() int32 {
	if x != nil {
		return x.WinningTeam
	}
	return 0
}

func (x *MatchRecord) GetMapId() int32 {
	if x != nil {
		return x.MapId
	}
	return 0
}

func (x *MatchRecord) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

// 玩家对局记录
type PlayerMatchRecord struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MatchId       string                 `protobuf:"bytes,1,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	PlayerId      int64                  `protobuf:"varint,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	CharacterId   int32                  `protobuf:"varint,3,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	Team          int32                  `protobuf:"varint,4,opt,name=team,proto3" json:"team,omitempty"`
	Score         int32                  `protobuf:"varint,5,opt,name=score,proto3" json:"score,omitempty"`
	Kills         int32                  `protobuf:"varint,6,opt,name=kills,proto3" json:"kills,omitempty"`
	Deaths        int32                  `protobuf:"varint,7,opt,name=deaths,proto3" json:"deaths,omitempty"`
	Assists       int32                  `protobuf:"varint,8,opt,name=assists,proto3" json:"assists,omitempty"`
	ExpGained     int32                  `protobuf:"varint,9,opt,name=exp_gained,json=expGained,proto3" json:"exp_gained,omitempty"`
	CoinsGained   int32                  `protobuf:"varint,10,opt,name=coins_gained,json=coinsGained,proto3" json:"coins_gained,omitempty"`
	Mvp           bool                   `protobuf:"varint,11,opt,name=mvp,proto3" json:"mvp,omitempty"`
	PlayTime      int32                  `protobuf:"varint,12,opt,name=play_time,json=playTime,proto3" json:"play_time,omitempty"`
	JoinTime      int64                  `protobuf:"varint,13,opt,name=join_time,json=joinTime,proto3" json:"join_time,omitempty"`
	LeaveTime     int64                  `protobuf:"varint,14,opt,name=leave_time,json=leaveTime,proto3" json:"leave_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerMatchRecord) Reset() {
	*x = PlayerMatchRecord{}
	mi := &file_internal_protocol_message_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerMatchRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerMatchRecord) ProtoMessage() {}

func (x *PlayerMatchRecord) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerMatchRecord.ProtoReflect.Descriptor instead.
func (*PlayerMatchRecord) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{28}
}

func (x *PlayerMatchRecord) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *PlayerMatchRecord) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *PlayerMatchRecord) GetCharacterId() int32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *PlayerMatchRecord) GetTeam() int32 {
	if x != nil {
		return x.Team
	}
	return 0
}

func (x *PlayerMatchRecord) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *PlayerMatchRecord) GetKills() int32 {
	if x != nil {
		return x.Kills
	}
	return 0
}

func (x *PlayerMatchRecord) GetDeaths() int32 {
	if x != nil {
		return x.Deaths
	}
	return 0
}

func (x *PlayerMatchRecord) GetAssists() int32 {
	if x != nil {
		return x.Assists
	}
	return 0
}

func (x *PlayerMatchRecord) GetExpGained() int32 {
	if x != nil {
		return x.ExpGained
	}
	return 0
}

func (x *PlayerMatchRecord) GetCoinsGained() int32 {
	if x != nil {
		return x.CoinsGained
	}
	return 0
}

func (x *PlayerMatchRecord) GetMvp() bool {
	if x != nil {
		return x.Mvp
	}
	return false
}

func (x *PlayerMatchRecord) GetPlayTime() int32 {
	if x != nil {
		return x.PlayTime
	}
	return 0
}

func (x *PlayerMatchRecord) GetJoinTime() int64 {
	if x != nil {
		return x.JoinTime
	}
	return 0
}

func (x *PlayerMatchRecord) GetLeaveTime() int64 {
	if x != nil {
		return x.LeaveTime
	}
	return 0
}

// 玩家战绩统计
type PlayerStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      int64                  `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	TotalMatches  int32                  `protobuf:"varint,2,opt,name=total_matches,json=totalMatches,proto3" json:"total_matches,omitempty"`
	TotalWins     int32                  `protobuf:"varint,3,opt,name=total_wins,json=totalWins,proto3" json:"total_wins,omitempty"`
	Losses        int32                  `protobuf:"varint,4,opt,name=losses,proto3" json:"losses,omitempty"`
	WinRate       float32                `protobuf:"fixed32,5,opt,name=win_rate,json=winRate,proto3" json:"win_rate,omitempty"`
	TotalKills    int32                  `protobuf:"varint,6,opt,name=total_kills,json=totalKills,proto3" json:"total_kills,omitempty"`
	TotalDeaths   int32                  `protobuf:"varint,7,opt,name=total_deaths,json=totalDeaths,proto3" json:"total_deaths,omitempty"`
	TotalAssists  int32                  `protobuf:"varint,8,opt,name=total_assists,json=totalAssists,proto3" json:"total_assists,omitempty"`
	Kda           float32                `protobuf:"fixed32,9,opt,name=kda,proto3" json:"kda,omitempty"`
	AverageScore  float32                `protobuf:"fixed32,10,opt,name=average_score,json=averageScore,proto3" json:"average_score,omitempty"`
	TotalMvp      int32                  `protobuf:"varint,11,opt,name=total_mvp,json=totalMvp,proto3" json:"total_mvp,omitempty"`
	PlayTime      int32                  `protobuf:"varint,12,opt,name=play_time,json=playTime,proto3" json:"play_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerStats) Reset() {
	*x = PlayerStats{}
	mi := &file_internal_protocol_message_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerStats) ProtoMessage() {}

func (x *PlayerStats) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerStats.ProtoReflect.Descriptor instead.
func (*PlayerStats) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{29}
}

func (x *PlayerStats) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *PlayerStats) GetTotalMatches() int32 {
	if x != nil {
		return x.TotalMatches
	}
	return 0
}

func (x *PlayerStats) GetTotalWins() int32 {
	if x != nil {
		return x.TotalWins
	}
	return 0
}

func (x *PlayerStats) GetLosses() int32 {
	if x != nil {
		return x.Losses
	}
	return 0
}

func (x *PlayerStats) GetWinRate() float32 {
	if x != nil {
		return x.WinRate
	}
	return 0
}

func (x *PlayerStats) GetTotalKills() int32 {
	if x != nil {
		return x.TotalKills
	}
	return 0
}

func (x *PlayerStats) GetTotalDeaths() int32 {
	if x != nil {
		return x.TotalDeaths
	}
	return 0
}

func (x *PlayerStats) GetTotalAssists() int32 {
	if x != nil {
		return x.TotalAssists
	}
	return 0
}

func (x *PlayerStats) GetKda() float32 {
	if x != nil {
		return x.Kda
	}
	return 0
}

func (x *PlayerStats) GetAverageScore() float32 {
	if x != nil {
		return x.AverageScore
	}
	return 0
}

func (x *PlayerStats) GetTotalMvp() int32 {
	if x != nil {
		return x.TotalMvp
	}
	return 0
}

func (x *PlayerStats) GetPlayTime() int32 {
	if x != nil {
		return x.PlayTime
	}
	return 0
}

// 排行榜条目
type LeaderboardEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      int64                  `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Level         int32                  `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`
	TotalKills    int32                  `protobuf:"varint,4,opt,name=total_kills,json=totalKills,proto3" json:"total_kills,omitempty"`
	TotalWins     int32                  `protobuf:"varint,6,opt,name=total_wins,json=totalWins,proto3" json:"total_wins,omitempty"`
	WinRate       float32                `protobuf:"fixed32,7,opt,name=win_rate,json=winRate,proto3" json:"win_rate,omitempty"`
	Kda           float32                `protobuf:"fixed32,8,opt,name=kda,proto3" json:"kda,omitempty"`
	Score         float32                `protobuf:"fixed32,9,opt,name=score,proto3" json:"score,omitempty"`
	Rank          int32                  `protobuf:"varint,10,opt,name=rank,proto3" json:"rank,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaderboardEntry) Reset() {
	*x = LeaderboardEntry{}
	mi := &file_internal_protocol_message_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaderboardEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderboardEntry) ProtoMessage() {}

func (x *LeaderboardEntry) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderboardEntry.ProtoReflect.Descriptor instead.
func (*LeaderboardEntry) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{30}
}

func (x *LeaderboardEntry) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *LeaderboardEntry) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LeaderboardEntry) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *LeaderboardEntry) GetTotalKills() int32 {
	if x != nil {
		return x.TotalKills
	}
	return 0
}

func (x *LeaderboardEntry) GetTotalWins() int32 {
	if x != nil {
		return x.TotalWins
	}
	return 0
}

func (x *LeaderboardEntry) GetWinRate() float32 {
	if x != nil {
		return x.WinRate
	}
	return 0
}

func (x *LeaderboardEntry) GetKda() float32 {
	if x != nil {
		return x.Kda
	}
	return 0
}

func (x *LeaderboardEntry) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *LeaderboardEntry) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

// 游戏地图信息
type GameMapInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description    string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	ImagePath      string                 `protobuf:"bytes,4,opt,name=image_path,json=imagePath,proto3" json:"image_path,omitempty"`
	Width          int32                  `protobuf:"varint,5,opt,name=width,proto3" json:"width,omitempty"`
	Height         int32                  `protobuf:"varint,6,opt,name=height,proto3" json:"height,omitempty"`
	MaxPlayers     int32                  `protobuf:"varint,7,opt,name=max_players,json=maxPlayers,proto3" json:"max_players,omitempty"`
	SupportedModes []string               `protobuf:"bytes,8,rep,name=supported_modes,json=supportedModes,proto3" json:"supported_modes,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GameMapInfo) Reset() {
	*x = GameMapInfo{}
	mi := &file_internal_protocol_message_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameMapInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameMapInfo) ProtoMessage() {}

func (x *GameMapInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameMapInfo.ProtoReflect.Descriptor instead.
func (*GameMapInfo) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{31}
}

func (x *GameMapInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GameMapInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GameMapInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GameMapInfo) GetImagePath() string {
	if x != nil {
		return x.ImagePath
	}
	return ""
}

func (x *GameMapInfo) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *GameMapInfo) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *GameMapInfo) GetMaxPlayers() int32 {
	if x != nil {
		return x.MaxPlayers
	}
	return 0
}

func (x *GameMapInfo) GetSupportedModes() []string {
	if x != nil {
		return x.SupportedModes
	}
	return nil
}

// 匹配偏好
type MatchPreferences struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	PlayerId           int64                  `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	PreferredModes     []string               `protobuf:"bytes,2,rep,name=preferred_modes,json=preferredModes,proto3" json:"preferred_modes,omitempty"`
	PreferredMaps      []int32                `protobuf:"varint,3,rep,packed,name=preferred_maps,json=preferredMaps,proto3" json:"preferred_maps,omitempty"`
	MaxPing            int32                  `protobuf:"varint,4,opt,name=max_ping,json=maxPing,proto3" json:"max_ping,omitempty"`
	AutoReady          bool                   `protobuf:"varint,5,opt,name=auto_ready,json=autoReady,proto3" json:"auto_ready,omitempty"`
	AllowCrossPlatform bool                   `protobuf:"varint,6,opt,name=allow_cross_platform,json=allowCrossPlatform,proto3" json:"allow_cross_platform,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *MatchPreferences) Reset() {
	*x = MatchPreferences{}
	mi := &file_internal_protocol_message_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchPreferences) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchPreferences) ProtoMessage() {}

func (x *MatchPreferences) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchPreferences.ProtoReflect.Descriptor instead.
func (*MatchPreferences) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{32}
}

func (x *MatchPreferences) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *MatchPreferences) GetPreferredModes() []string {
	if x != nil {
		return x.PreferredModes
	}
	return nil
}

func (x *MatchPreferences) GetPreferredMaps() []int32 {
	if x != nil {
		return x.PreferredMaps
	}
	return nil
}

func (x *MatchPreferences) GetMaxPing() int32 {
	if x != nil {
		return x.MaxPing
	}
	return 0
}

func (x *MatchPreferences) GetAutoReady() bool {
	if x != nil {
		return x.AutoReady
	}
	return false
}

func (x *MatchPreferences) GetAllowCrossPlatform() bool {
	if x != nil {
		return x.AllowCrossPlatform
	}
	return false
}

// 匹配历史
type MatchHistory struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PlayerId      int64                  `protobuf:"varint,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	GameMode      string                 `protobuf:"bytes,3,opt,name=game_mode,json=gameMode,proto3" json:"game_mode,omitempty"`
	QueueTime     int64                  `protobuf:"varint,4,opt,name=queue_time,json=queueTime,proto3" json:"queue_time,omitempty"`
	MatchTime     int64                  `protobuf:"varint,5,opt,name=match_time,json=matchTime,proto3" json:"match_time,omitempty"`
	Status        string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	RoomId        string                 `protobuf:"bytes,7,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchHistory) Reset() {
	*x = MatchHistory{}
	mi := &file_internal_protocol_message_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchHistory) ProtoMessage() {}

func (x *MatchHistory) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchHistory.ProtoReflect.Descriptor instead.
func (*MatchHistory) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{33}
}

func (x *MatchHistory) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MatchHistory) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *MatchHistory) GetGameMode() string {
	if x != nil {
		return x.GameMode
	}
	return ""
}

func (x *MatchHistory) GetQueueTime() int64 {
	if x != nil {
		return x.QueueTime
	}
	return 0
}

func (x *MatchHistory) GetMatchTime() int64 {
	if x != nil {
		return x.MatchTime
	}
	return 0
}

func (x *MatchHistory) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *MatchHistory) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

// 角色列表响应
type CharacterListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          []*CharacterInfo       `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CharacterListResponse) Reset() {
	*x = CharacterListResponse{}
	mi := &file_internal_protocol_message_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CharacterListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterListResponse) ProtoMessage() {}

func (x *CharacterListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterListResponse.ProtoReflect.Descriptor instead.
func (*CharacterListResponse) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{34}
}

func (x *CharacterListResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CharacterListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CharacterListResponse) GetData() []*CharacterInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

// 角色详情响应
type CharacterDetailResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          *CharacterInfo         `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CharacterDetailResponse) Reset() {
	*x = CharacterDetailResponse{}
	mi := &file_internal_protocol_message_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CharacterDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterDetailResponse) ProtoMessage() {}

func (x *CharacterDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterDetailResponse.ProtoReflect.Descriptor instead.
func (*CharacterDetailResponse) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{35}
}

func (x *CharacterDetailResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CharacterDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CharacterDetailResponse) GetData() *CharacterInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

// 玩家角色查询响应
type PlayerCharactersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          []*PlayerCharacterInfo `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerCharactersResponse) Reset() {
	*x = PlayerCharactersResponse{}
	mi := &file_internal_protocol_message_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerCharactersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerCharactersResponse) ProtoMessage() {}

func (x *PlayerCharactersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerCharactersResponse.ProtoReflect.Descriptor instead.
func (*PlayerCharactersResponse) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{36}
}

func (x *PlayerCharactersResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PlayerCharactersResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PlayerCharactersResponse) GetData() []*PlayerCharacterInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

// 设置默认角色请求
type SetDefaultCharacterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      int64                  `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	CharacterId   int32                  `protobuf:"varint,2,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetDefaultCharacterRequest) Reset() {
	*x = SetDefaultCharacterRequest{}
	mi := &file_internal_protocol_message_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetDefaultCharacterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDefaultCharacterRequest) ProtoMessage() {}

func (x *SetDefaultCharacterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDefaultCharacterRequest.ProtoReflect.Descriptor instead.
func (*SetDefaultCharacterRequest) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{37}
}

func (x *SetDefaultCharacterRequest) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *SetDefaultCharacterRequest) GetCharacterId() int32 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

// 玩家资料响应
type PlayerProfileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          *PlayerProfile         `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerProfileResponse) Reset() {
	*x = PlayerProfileResponse{}
	mi := &file_internal_protocol_message_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerProfileResponse) ProtoMessage() {}

func (x *PlayerProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerProfileResponse.ProtoReflect.Descriptor instead.
func (*PlayerProfileResponse) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{38}
}

func (x *PlayerProfileResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PlayerProfileResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PlayerProfileResponse) GetData() *PlayerProfile {
	if x != nil {
		return x.Data
	}
	return nil
}

// 更新玩家资料请求
type UpdatePlayerProfileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      int64                  `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Email         string                 `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePlayerProfileRequest) Reset() {
	*x = UpdatePlayerProfileRequest{}
	mi := &file_internal_protocol_message_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePlayerProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlayerProfileRequest) ProtoMessage() {}

func (x *UpdatePlayerProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlayerProfileRequest.ProtoReflect.Descriptor instead.
func (*UpdatePlayerProfileRequest) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{39}
}

func (x *UpdatePlayerProfileRequest) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *UpdatePlayerProfileRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UpdatePlayerProfileRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

// 战绩查询响应
type PlayerStatsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          *PlayerStats           `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerStatsResponse) Reset() {
	*x = PlayerStatsResponse{}
	mi := &file_internal_protocol_message_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerStatsResponse) ProtoMessage() {}

func (x *PlayerStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerStatsResponse.ProtoReflect.Descriptor instead.
func (*PlayerStatsResponse) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{40}
}

func (x *PlayerStatsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PlayerStatsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PlayerStatsResponse) GetData() *PlayerStats {
	if x != nil {
		return x.Data
	}
	return nil
}

// 对局历史响应
type MatchHistoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          []*PlayerMatchRecord   `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Total         int32                  `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Page          int32                  `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,6,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchHistoryResponse) Reset() {
	*x = MatchHistoryResponse{}
	mi := &file_internal_protocol_message_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchHistoryResponse) ProtoMessage() {}

func (x *MatchHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchHistoryResponse.ProtoReflect.Descriptor instead.
func (*MatchHistoryResponse) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{41}
}

func (x *MatchHistoryResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *MatchHistoryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *MatchHistoryResponse) GetData() []*PlayerMatchRecord {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *MatchHistoryResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *MatchHistoryResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *MatchHistoryResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 排行榜响应
type LeaderboardResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Success         bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message         string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data            []*LeaderboardEntry    `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	LeaderboardType string                 `protobuf:"bytes,4,opt,name=leaderboard_type,json=leaderboardType,proto3" json:"leaderboard_type,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *LeaderboardResponse) Reset() {
	*x = LeaderboardResponse{}
	mi := &file_internal_protocol_message_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaderboardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderboardResponse) ProtoMessage() {}

func (x *LeaderboardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderboardResponse.ProtoReflect.Descriptor instead.
func (*LeaderboardResponse) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{42}
}

func (x *LeaderboardResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LeaderboardResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LeaderboardResponse) GetData() []*LeaderboardEntry {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *LeaderboardResponse) GetLeaderboardType() string {
	if x != nil {
		return x.LeaderboardType
	}
	return ""
}

// 匹配偏好设置请求
type SetMatchPreferencesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      int64                  `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Preferences   *MatchPreferences      `protobuf:"bytes,2,opt,name=preferences,proto3" json:"preferences,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetMatchPreferencesRequest) Reset() {
	*x = SetMatchPreferencesRequest{}
	mi := &file_internal_protocol_message_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetMatchPreferencesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMatchPreferencesRequest) ProtoMessage() {}

func (x *SetMatchPreferencesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMatchPreferencesRequest.ProtoReflect.Descriptor instead.
func (*SetMatchPreferencesRequest) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{43}
}

func (x *SetMatchPreferencesRequest) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *SetMatchPreferencesRequest) GetPreferences() *MatchPreferences {
	if x != nil {
		return x.Preferences
	}
	return nil
}

// 匹配偏好查询响应
type MatchPreferencesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          *MatchPreferences      `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchPreferencesResponse) Reset() {
	*x = MatchPreferencesResponse{}
	mi := &file_internal_protocol_message_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchPreferencesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchPreferencesResponse) ProtoMessage() {}

func (x *MatchPreferencesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchPreferencesResponse.ProtoReflect.Descriptor instead.
func (*MatchPreferencesResponse) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{44}
}

func (x *MatchPreferencesResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *MatchPreferencesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *MatchPreferencesResponse) GetData() *MatchPreferences {
	if x != nil {
		return x.Data
	}
	return nil
}

// 匹配历史查询响应
type MatchHistoryListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          []*MatchHistory        `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Total         int32                  `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Page          int32                  `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,6,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchHistoryListResponse) Reset() {
	*x = MatchHistoryListResponse{}
	mi := &file_internal_protocol_message_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchHistoryListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchHistoryListResponse) ProtoMessage() {}

func (x *MatchHistoryListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchHistoryListResponse.ProtoReflect.Descriptor instead.
func (*MatchHistoryListResponse) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{45}
}

func (x *MatchHistoryListResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *MatchHistoryListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *MatchHistoryListResponse) GetData() []*MatchHistory {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *MatchHistoryListResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *MatchHistoryListResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *MatchHistoryListResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 通用成功响应
type SuccessResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SuccessResponse) Reset() {
	*x = SuccessResponse{}
	mi := &file_internal_protocol_message_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuccessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuccessResponse) ProtoMessage() {}

func (x *SuccessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuccessResponse.ProtoReflect.Descriptor instead.
func (*SuccessResponse) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{46}
}

func (x *SuccessResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SuccessResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 通用错误响应
type ErrorResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ErrorCode     string                 `protobuf:"bytes,3,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorResponse) Reset() {
	*x = ErrorResponse{}
	mi := &file_internal_protocol_message_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResponse) ProtoMessage() {}

func (x *ErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_message_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResponse.ProtoReflect.Descriptor instead.
func (*ErrorResponse) Descriptor() ([]byte, []int) {
	return file_internal_protocol_message_proto_rawDescGZIP(), []int{47}
}

func (x *ErrorResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ErrorResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ErrorResponse) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

var File_internal_protocol_message_proto protoreflect.FileDescriptor

const file_internal_protocol_message_proto_rawDesc = "" +
	"\n" +
	"\x1finternal/protocol/message.proto\x12\bprotocol\"L\n" +
	"\bResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x12\n" +
	"\x04data\x18\x03 \x01(\fR\x04data\"&\n" +
	"\bVector2D\x12\f\n" +
	"\x01x\x18\x01 \x01(\x02R\x01x\x12\f\n" +
	"\x01y\x18\x02 \x01(\x02R\x01y\"F\n" +
	"\fLoginRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\"t\n" +
	"\rLoginResponse\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\x03R\bplayerId\x12\x14\n" +
	"\x05token\x18\x02 \x01(\tR\x05token\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12\x14\n" +
	"\x05level\x18\x04 \x01(\x05R\x05level\"_\n" +
	"\x0fRegisterRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\x12\x14\n" +
	"\x05email\x18\x03 \x01(\tR\x05email\"k\n" +
	"\fMatchRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\x03R\bplayerId\x12!\n" +
	"\fcharacter_id\x18\x02 \x01(\x05R\vcharacterId\x12\x1b\n" +
	"\tgame_mode\x18\x03 \x01(\tR\bgameMode\"\xc1\x01\n" +
	"\vMatchUpdate\x124\n" +
	"\x06status\x18\x01 \x01(\x0e2\x1c.protocol.MatchUpdate.StatusR\x06status\x12#\n" +
	"\rwaiting_count\x18\x02 \x01(\x05R\fwaitingCount\x12\x17\n" +
	"\aroom_id\x18\x03 \x01(\tR\x06roomId\">\n" +
	"\x06Status\x12\f\n" +
	"\bMATCHING\x10\x00\x12\v\n" +
	"\aMATCHED\x10\x01\x12\f\n" +
	"\bCANCELED\x10\x02\x12\v\n" +
	"\aTIMEOUT\x10\x03\"\x92\x02\n" +
	"\bRoomInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04mode\x18\x03 \x01(\tR\x04mode\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12\x1f\n" +
	"\vmax_players\x18\x05 \x01(\x05R\n" +
	"maxPlayers\x12'\n" +
	"\x0fcurrent_players\x18\x06 \x01(\x05R\x0ecurrentPlayers\x12\x15\n" +
	"\x06map_id\x18\a \x01(\x05R\x05mapId\x12!\n" +
	"\fprivate_room\x18\b \x01(\bR\vprivateRoom\x122\n" +
	"\aplayers\x18\t \x03(\v2\x18.protocol.RoomPlayerInfoR\aplayers\"\x96\x01\n" +
	"\x0eRoomPlayerInfo\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\x03R\bplayerId\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12!\n" +
	"\fcharacter_id\x18\x03 \x01(\x05R\vcharacterId\x12\x12\n" +
	"\x04team\x18\x04 \x01(\x05R\x04team\x12\x14\n" +
	"\x05ready\x18\x05 \x01(\bR\x05ready\"\xb2\x01\n" +
	"\x11CreateRoomRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04mode\x18\x02 \x01(\tR\x04mode\x12\x1f\n" +
	"\vmax_players\x18\x03 \x01(\x05R\n" +
	"maxPlayers\x12\x15\n" +
	"\x06map_id\x18\x04 \x01(\x05R\x05mapId\x12!\n" +
	"\fprivate_room\x18\x05 \x01(\bR\vprivateRoom\x12\x1a\n" +
	"\bpassword\x18\x06 \x01(\tR\bpassword\"i\n" +
	"\x0fJoinRoomRequest\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\x12!\n" +
	"\fcharacter_id\x18\x03 \x01(\x05R\vcharacterId\"\xc2\x01\n" +
	"\n" +
	"EntityInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12(\n" +
	"\x04type\x18\x02 \x01(\x0e2\x14.protocol.EntityTypeR\x04type\x12.\n" +
	"\bposition\x18\x03 \x01(\v2\x12.protocol.Vector2DR\bposition\x12\x1a\n" +
	"\brotation\x18\x04 \x01(\x02R\brotation\x12.\n" +
	"\bvelocity\x18\x05 \x01(\v2\x12.protocol.Vector2DR\bvelocity\"\xfe\x02\n" +
	"\x10PlayerEntityInfo\x12(\n" +
	"\x04base\x18\x01 \x01(\v2\x14.protocol.EntityInfoR\x04base\x12\x1b\n" +
	"\tplayer_id\x18\x02 \x01(\x03R\bplayerId\x12!\n" +
	"\fcharacter_id\x18\x03 \x01(\x05R\vcharacterId\x12\x12\n" +
	"\x04team\x18\x04 \x01(\x05R\x04team\x12\x16\n" +
	"\x06health\x18\x05 \x01(\x05R\x06health\x12\x1d\n" +
	"\n" +
	"max_health\x18\x06 \x01(\x05R\tmaxHealth\x12\x19\n" +
	"\bis_alive\x18\a \x01(\bR\aisAlive\x12W\n" +
	"\x0fskill_cooldowns\x18\b \x03(\v2..protocol.PlayerEntityInfo.SkillCooldownsEntryR\x0eskillCooldowns\x1aA\n" +
	"\x13SkillCooldownsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x02R\x05value:\x028\x01\"\xce\x01\n" +
	"\x14ProjectileEntityInfo\x12(\n" +
	"\x04base\x18\x01 \x01(\v2\x14.protocol.EntityInfoR\x04base\x12\x19\n" +
	"\bowner_id\x18\x02 \x01(\tR\aownerId\x12\x19\n" +
	"\bskill_id\x18\x03 \x01(\x05R\askillId\x12\x16\n" +
	"\x06damage\x18\x04 \x01(\x05R\x06damage\x12\x1b\n" +
	"\tlife_time\x18\x05 \x01(\x02R\blifeTime\x12!\n" +
	"\fhit_entities\x18\x06 \x03(\tR\vhitEntities\"W\n" +
	"\rMoveOperation\x120\n" +
	"\tdirection\x18\x01 \x01(\v2\x12.protocol.Vector2DR\tdirection\x12\x14\n" +
	"\x05speed\x18\x02 \x01(\x02R\x05speed\"-\n" +
	"\x0fRotateOperation\x12\x1a\n" +
	"\brotation\x18\x01 \x01(\x02R\brotation\"W\n" +
	"\x0eSkillOperation\x12\x19\n" +
	"\bskill_id\x18\x01 \x01(\x05R\askillId\x12*\n" +
	"\x06target\x18\x02 \x01(\v2\x12.protocol.Vector2DR\x06target\"\xbb\x01\n" +
	"\vPlayerInput\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12+\n" +
	"\x04move\x18\x02 \x01(\v2\x17.protocol.MoveOperationR\x04move\x121\n" +
	"\x06rotate\x18\x03 \x01(\v2\x19.protocol.RotateOperationR\x06rotate\x12.\n" +
	"\x05skill\x18\x04 \x01(\v2\x18.protocol.SkillOperationR\x05skill\"\xcb\x02\n" +
	"\tGameFrame\x12\x19\n" +
	"\bframe_id\x18\x01 \x01(\x03R\aframeId\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\x120\n" +
	"\bentities\x18\x03 \x03(\v2\x14.protocol.EntityInfoR\bentities\x128\n" +
	"\n" +
	"collisions\x18\x04 \x03(\v2\x18.protocol.CollisionEventR\n" +
	"collisions\x127\n" +
	"\x06scores\x18\x05 \x03(\v2\x1f.protocol.GameFrame.ScoresEntryR\x06scores\x12%\n" +
	"\x0eremaining_time\x18\x06 \x01(\x05R\rremainingTime\x1a9\n" +
	"\vScoresEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x03R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"\x8e\x01\n" +
	"\x0eCollisionEvent\x12\x19\n" +
	"\bentity_a\x18\x01 \x01(\tR\aentityA\x12\x19\n" +
	"\bentity_b\x18\x02 \x01(\tR\aentityB\x12.\n" +
	"\bposition\x18\x03 \x01(\v2\x12.protocol.Vector2DR\bposition\x12\x16\n" +
	"\x06damage\x18\x04 \x01(\x05R\x06damage\"\xb4\x01\n" +
	"\n" +
	"GameResult\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\x12\x1d\n" +
	"\n" +
	"start_time\x18\x02 \x01(\x03R\tstartTime\x12\x19\n" +
	"\bend_time\x18\x03 \x01(\x03R\aendTime\x12!\n" +
	"\fwinning_team\x18\x04 \x01(\tR\vwinningTeam\x120\n" +
	"\aplayers\x18\x05 \x03(\v2\x16.protocol.PlayerResultR\aplayers\"\xaa\x02\n" +
	"\fPlayerResult\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\x03R\bplayerId\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x12\n" +
	"\x04team\x18\x03 \x01(\x05R\x04team\x12\x14\n" +
	"\x05score\x18\x04 \x01(\x05R\x05score\x12\x14\n" +
	"\x05kills\x18\x05 \x01(\x05R\x05kills\x12\x16\n" +
	"\x06deaths\x18\x06 \x01(\x05R\x06deaths\x12\x18\n" +
	"\aassists\x18\a \x01(\x05R\aassists\x12\x1d\n" +
	"\n" +
	"exp_gained\x18\b \x01(\x05R\texpGained\x12!\n" +
	"\fcoins_gained\x18\t \x01(\x05R\vcoinsGained\x12\x10\n" +
	"\x03mvp\x18\n" +
	" \x01(\bR\x03mvp\x12\x1b\n" +
	"\tplay_time\x18\v \x01(\x05R\bplayTime\"\xb5\x03\n" +
	"\tSkillInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12'\n" +
	"\x04type\x18\x04 \x01(\x0e2\x13.protocol.SkillTypeR\x04type\x12\x16\n" +
	"\x06damage\x18\x05 \x01(\x05R\x06damage\x12#\n" +
	"\rcooldown_time\x18\x06 \x01(\x02R\fcooldownTime\x12\x14\n" +
	"\x05range\x18\a \x01(\x02R\x05range\x12\x1f\n" +
	"\veffect_time\x18\b \x01(\x02R\n" +
	"effectTime\x12)\n" +
	"\x10projectile_speed\x18\t \x01(\x02R\x0fprojectileSpeed\x12)\n" +
	"\x10projectile_count\x18\n" +
	" \x01(\x05R\x0fprojectileCount\x12+\n" +
	"\x11projectile_spread\x18\v \x01(\x02R\x10projectileSpread\x12#\n" +
	"\ranimation_key\x18\f \x01(\tR\fanimationKey\x12\x1d\n" +
	"\n" +
	"effect_key\x18\r \x01(\tR\teffectKey\"\x91\x03\n" +
	"\rCharacterInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x15\n" +
	"\x06max_hp\x18\x04 \x01(\x05R\x05maxHp\x12\x14\n" +
	"\x05speed\x18\x05 \x01(\x02R\x05speed\x12\x1f\n" +
	"\vbase_attack\x18\x06 \x01(\x05R\n" +
	"baseAttack\x12!\n" +
	"\fbase_defense\x18\a \x01(\x05R\vbaseDefense\x12'\n" +
	"\x0fspecial_ability\x18\b \x01(\tR\x0especialAbility\x12+\n" +
	"\x06skills\x18\t \x03(\v2\x13.protocol.SkillInfoR\x06skills\x12\x1e\n" +
	"\n" +
	"difficulty\x18\n" +
	" \x01(\x05R\n" +
	"difficulty\x12\x12\n" +
	"\x04role\x18\v \x01(\tR\x04role\x12\x1e\n" +
	"\n" +
	"unlockable\x18\f \x01(\bR\n" +
	"unlockable\x12\x1f\n" +
	"\vunlock_cost\x18\r \x01(\x05R\n" +
	"unlockCost\"\x97\x02\n" +
	"\x13PlayerCharacterInfo\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\x03R\bplayerId\x12!\n" +
	"\fcharacter_id\x18\x02 \x01(\x05R\vcharacterId\x12\x14\n" +
	"\x05level\x18\x03 \x01(\x05R\x05level\x12\x10\n" +
	"\x03exp\x18\x04 \x01(\x05R\x03exp\x12\x1a\n" +
	"\bunlocked\x18\x05 \x01(\bR\bunlocked\x12\x1f\n" +
	"\vusage_count\x18\x06 \x01(\x05R\n" +
	"usageCount\x12\x1b\n" +
	"\twin_count\x18\a \x01(\x05R\bwinCount\x12\x1d\n" +
	"\n" +
	"kill_count\x18\b \x01(\x05R\tkillCount\x12\x1f\n" +
	"\vdeath_count\x18\t \x01(\x05R\n" +
	"deathCount\"\xdd\x01\n" +
	"\x1aCharacterUnlockRequirement\x12!\n" +
	"\fcharacter_id\x18\x01 \x01(\x05R\vcharacterId\x12%\n" +
	"\x0erequired_level\x18\x02 \x01(\x05R\rrequiredLevel\x12%\n" +
	"\x0erequired_coins\x18\x03 \x01(\x03R\rrequiredCoins\x12#\n" +
	"\rrequired_gems\x18\x04 \x01(\x03R\frequiredGems\x12)\n" +
	"\x10required_matches\x18\x05 \x01(\x05R\x0frequiredMatches\"\x93\x04\n" +
	"\rPlayerProfile\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x14\n" +
	"\x05email\x18\x03 \x01(\tR\x05email\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x05 \x01(\x03R\tupdatedAt\x12\x14\n" +
	"\x05level\x18\x06 \x01(\x05R\x05level\x12\x10\n" +
	"\x03exp\x18\a \x01(\x03R\x03exp\x12\x14\n" +
	"\x05coins\x18\b \x01(\x03R\x05coins\x12\x12\n" +
	"\x04gems\x18\t \x01(\x03R\x04gems\x12\x1f\n" +
	"\vtotal_kills\x18\n" +
	" \x01(\x05R\n" +
	"totalKills\x12!\n" +
	"\ftotal_deaths\x18\v \x01(\x05R\vtotalDeaths\x12#\n" +
	"\rtotal_assists\x18\f \x01(\x05R\ftotalAssists\x12#\n" +
	"\rtotal_matches\x18\r \x01(\x05R\ftotalMatches\x12\x1d\n" +
	"\n" +
	"total_wins\x18\x0e \x01(\x05R\ttotalWins\x12=\n" +
	"\n" +
	"characters\x18\x0f \x03(\v2\x1d.protocol.PlayerCharacterInfoR\n" +
	"characters\x12D\n" +
	"\x11default_character\x18\x10 \x01(\v2\x17.protocol.CharacterInfoR\x10defaultCharacter\"\xca\x01\n" +
	"\vMatchRecord\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tgame_mode\x18\x02 \x01(\tR\bgameMode\x12\x1d\n" +
	"\n" +
	"start_time\x18\x03 \x01(\x03R\tstartTime\x12\x19\n" +
	"\bend_time\x18\x04 \x01(\x03R\aendTime\x12!\n" +
	"\fwinning_team\x18\x05 \x01(\x05R\vwinningTeam\x12\x15\n" +
	"\x06map_id\x18\x06 \x01(\x05R\x05mapId\x12\x1a\n" +
	"\bduration\x18\a \x01(\x05R\bduration\"\x8d\x03\n" +
	"\x11PlayerMatchRecord\x12\x19\n" +
	"\bmatch_id\x18\x01 \x01(\tR\amatchId\x12\x1b\n" +
	"\tplayer_id\x18\x02 \x01(\x03R\bplayerId\x12!\n" +
	"\fcharacter_id\x18\x03 \x01(\x05R\vcharacterId\x12\x12\n" +
	"\x04team\x18\x04 \x01(\x05R\x04team\x12\x14\n" +
	"\x05score\x18\x05 \x01(\x05R\x05score\x12\x14\n" +
	"\x05kills\x18\x06 \x01(\x05R\x05kills\x12\x16\n" +
	"\x06deaths\x18\a \x01(\x05R\x06deaths\x12\x18\n" +
	"\aassists\x18\b \x01(\x05R\aassists\x12\x1d\n" +
	"\n" +
	"exp_gained\x18\t \x01(\x05R\texpGained\x12!\n" +
	"\fcoins_gained\x18\n" +
	" \x01(\x05R\vcoinsGained\x12\x10\n" +
	"\x03mvp\x18\v \x01(\bR\x03mvp\x12\x1b\n" +
	"\tplay_time\x18\f \x01(\x05R\bplayTime\x12\x1b\n" +
	"\tjoin_time\x18\r \x01(\x03R\bjoinTime\x12\x1d\n" +
	"\n" +
	"leave_time\x18\x0e \x01(\x03R\tleaveTime\"\xfb\x02\n" +
	"\vPlayerStats\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\x03R\bplayerId\x12#\n" +
	"\rtotal_matches\x18\x02 \x01(\x05R\ftotalMatches\x12\x1d\n" +
	"\n" +
	"total_wins\x18\x03 \x01(\x05R\ttotalWins\x12\x16\n" +
	"\x06losses\x18\x04 \x01(\x05R\x06losses\x12\x19\n" +
	"\bwin_rate\x18\x05 \x01(\x02R\awinRate\x12\x1f\n" +
	"\vtotal_kills\x18\x06 \x01(\x05R\n" +
	"totalKills\x12!\n" +
	"\ftotal_deaths\x18\a \x01(\x05R\vtotalDeaths\x12#\n" +
	"\rtotal_assists\x18\b \x01(\x05R\ftotalAssists\x12\x10\n" +
	"\x03kda\x18\t \x01(\x02R\x03kda\x12#\n" +
	"\raverage_score\x18\n" +
	" \x01(\x02R\faverageScore\x12\x1b\n" +
	"\ttotal_mvp\x18\v \x01(\x05R\btotalMvp\x12\x1b\n" +
	"\tplay_time\x18\f \x01(\x05R\bplayTime\"\xf8\x01\n" +
	"\x10LeaderboardEntry\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\x03R\bplayerId\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x14\n" +
	"\x05level\x18\x03 \x01(\x05R\x05level\x12\x1f\n" +
	"\vtotal_kills\x18\x04 \x01(\x05R\n" +
	"totalKills\x12\x1d\n" +
	"\n" +
	"total_wins\x18\x06 \x01(\x05R\ttotalWins\x12\x19\n" +
	"\bwin_rate\x18\a \x01(\x02R\awinRate\x12\x10\n" +
	"\x03kda\x18\b \x01(\x02R\x03kda\x12\x14\n" +
	"\x05score\x18\t \x01(\x02R\x05score\x12\x12\n" +
	"\x04rank\x18\n" +
	" \x01(\x05R\x04rank\"\xea\x01\n" +
	"\vGameMapInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"image_path\x18\x04 \x01(\tR\timagePath\x12\x14\n" +
	"\x05width\x18\x05 \x01(\x05R\x05width\x12\x16\n" +
	"\x06height\x18\x06 \x01(\x05R\x06height\x12\x1f\n" +
	"\vmax_players\x18\a \x01(\x05R\n" +
	"maxPlayers\x12'\n" +
	"\x0fsupported_modes\x18\b \x03(\tR\x0esupportedModes\"\xeb\x01\n" +
	"\x10MatchPreferences\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\x03R\bplayerId\x12'\n" +
	"\x0fpreferred_modes\x18\x02 \x03(\tR\x0epreferredModes\x12%\n" +
	"\x0epreferred_maps\x18\x03 \x03(\x05R\rpreferredMaps\x12\x19\n" +
	"\bmax_ping\x18\x04 \x01(\x05R\amaxPing\x12\x1d\n" +
	"\n" +
	"auto_ready\x18\x05 \x01(\bR\tautoReady\x120\n" +
	"\x14allow_cross_platform\x18\x06 \x01(\bR\x12allowCrossPlatform\"\xc7\x01\n" +
	"\fMatchHistory\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tplayer_id\x18\x02 \x01(\x03R\bplayerId\x12\x1b\n" +
	"\tgame_mode\x18\x03 \x01(\tR\bgameMode\x12\x1d\n" +
	"\n" +
	"queue_time\x18\x04 \x01(\x03R\tqueueTime\x12\x1d\n" +
	"\n" +
	"match_time\x18\x05 \x01(\x03R\tmatchTime\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x12\x17\n" +
	"\aroom_id\x18\a \x01(\tR\x06roomId\"x\n" +
	"\x15CharacterListResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12+\n" +
	"\x04data\x18\x03 \x03(\v2\x17.protocol.CharacterInfoR\x04data\"z\n" +
	"\x17CharacterDetailResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12+\n" +
	"\x04data\x18\x03 \x01(\v2\x17.protocol.CharacterInfoR\x04data\"\x81\x01\n" +
	"\x18PlayerCharactersResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x121\n" +
	"\x04data\x18\x03 \x03(\v2\x1d.protocol.PlayerCharacterInfoR\x04data\"\\\n" +
	"\x1aSetDefaultCharacterRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\x03R\bplayerId\x12!\n" +
	"\fcharacter_id\x18\x02 \x01(\x05R\vcharacterId\"x\n" +
	"\x15PlayerProfileResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12+\n" +
	"\x04data\x18\x03 \x01(\v2\x17.protocol.PlayerProfileR\x04data\"k\n" +
	"\x1aUpdatePlayerProfileRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\x03R\bplayerId\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x14\n" +
	"\x05email\x18\x03 \x01(\tR\x05email\"t\n" +
	"\x13PlayerStatsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12)\n" +
	"\x04data\x18\x03 \x01(\v2\x15.protocol.PlayerStatsR\x04data\"\xc2\x01\n" +
	"\x14MatchHistoryResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12/\n" +
	"\x04data\x18\x03 \x03(\v2\x1b.protocol.PlayerMatchRecordR\x04data\x12\x14\n" +
	"\x05total\x18\x04 \x01(\x05R\x05total\x12\x12\n" +
	"\x04page\x18\x05 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x06 \x01(\x05R\bpageSize\"\xa4\x01\n" +
	"\x13LeaderboardResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12.\n" +
	"\x04data\x18\x03 \x03(\v2\x1a.protocol.LeaderboardEntryR\x04data\x12)\n" +
	"\x10leaderboard_type\x18\x04 \x01(\tR\x0fleaderboardType\"w\n" +
	"\x1aSetMatchPreferencesRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\x03R\bplayerId\x12<\n" +
	"\vpreferences\x18\x02 \x01(\v2\x1a.protocol.MatchPreferencesR\vpreferences\"~\n" +
	"\x18MatchPreferencesResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12.\n" +
	"\x04data\x18\x03 \x01(\v2\x1a.protocol.MatchPreferencesR\x04data\"\xc1\x01\n" +
	"\x18MatchHistoryListResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12*\n" +
	"\x04data\x18\x03 \x03(\v2\x16.protocol.MatchHistoryR\x04data\x12\x14\n" +
	"\x05total\x18\x04 \x01(\x05R\x05total\x12\x12\n" +
	"\x04page\x18\x05 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x06 \x01(\x05R\bpageSize\"E\n" +
	"\x0fSuccessResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"b\n" +
	"\rErrorResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1d\n" +
	"\n" +
	"error_code\x18\x03 \x01(\tR\terrorCode*N\n" +
	"\n" +
	"EntityType\x12\n" +
	"\n" +
	"\x06PLAYER\x10\x00\x12\x0e\n" +
	"\n" +
	"PROJECTILE\x10\x01\x12\n" +
	"\n" +
	"\x06EFFECT\x10\x02\x12\f\n" +
	"\bOBSTACLE\x10\x03\x12\n" +
	"\n" +
	"\x06PICKUP\x10\x04*y\n" +
	"\tSkillType\x12\x14\n" +
	"\x10SKILL_PROJECTILE\x10\x00\x12\r\n" +
	"\tSKILL_AOE\x10\x01\x12\x0e\n" +
	"\n" +
	"SKILL_BUFF\x10\x02\x12\x10\n" +
	"\fSKILL_DEBUFF\x10\x03\x12\x12\n" +
	"\x0eSKILL_MOVEMENT\x10\x04\x12\x11\n" +
	"\rSKILL_UTILITY\x10\x05B;Z9github.com/jacl-coder/PixelStorm-Server/internal/protocolb\x06proto3"

var (
	file_internal_protocol_message_proto_rawDescOnce sync.Once
	file_internal_protocol_message_proto_rawDescData []byte
)

func file_internal_protocol_message_proto_rawDescGZIP() []byte {
	file_internal_protocol_message_proto_rawDescOnce.Do(func() {
		file_internal_protocol_message_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_internal_protocol_message_proto_rawDesc), len(file_internal_protocol_message_proto_rawDesc)))
	})
	return file_internal_protocol_message_proto_rawDescData
}

var file_internal_protocol_message_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_internal_protocol_message_proto_msgTypes = make([]protoimpl.MessageInfo, 50)
var file_internal_protocol_message_proto_goTypes = []any{
	(EntityType)(0),                    // 0: protocol.EntityType
	(SkillType)(0),                     // 1: protocol.SkillType
	(MatchUpdate_Status)(0),            // 2: protocol.MatchUpdate.Status
	(*Response)(nil),                   // 3: protocol.Response
	(*Vector2D)(nil),                   // 4: protocol.Vector2D
	(*LoginRequest)(nil),               // 5: protocol.LoginRequest
	(*LoginResponse)(nil),              // 6: protocol.LoginResponse
	(*RegisterRequest)(nil),            // 7: protocol.RegisterRequest
	(*MatchRequest)(nil),               // 8: protocol.MatchRequest
	(*MatchUpdate)(nil),                // 9: protocol.MatchUpdate
	(*RoomInfo)(nil),                   // 10: protocol.RoomInfo
	(*RoomPlayerInfo)(nil),             // 11: protocol.RoomPlayerInfo
	(*CreateRoomRequest)(nil),          // 12: protocol.CreateRoomRequest
	(*JoinRoomRequest)(nil),            // 13: protocol.JoinRoomRequest
	(*EntityInfo)(nil),                 // 14: protocol.EntityInfo
	(*PlayerEntityInfo)(nil),           // 15: protocol.PlayerEntityInfo
	(*ProjectileEntityInfo)(nil),       // 16: protocol.ProjectileEntityInfo
	(*MoveOperation)(nil),              // 17: protocol.MoveOperation
	(*RotateOperation)(nil),            // 18: protocol.RotateOperation
	(*SkillOperation)(nil),             // 19: protocol.SkillOperation
	(*PlayerInput)(nil),                // 20: protocol.PlayerInput
	(*GameFrame)(nil),                  // 21: protocol.GameFrame
	(*CollisionEvent)(nil),             // 22: protocol.CollisionEvent
	(*GameResult)(nil),                 // 23: protocol.GameResult
	(*PlayerResult)(nil),               // 24: protocol.PlayerResult
	(*SkillInfo)(nil),                  // 25: protocol.SkillInfo
	(*CharacterInfo)(nil),              // 26: protocol.CharacterInfo
	(*PlayerCharacterInfo)(nil),        // 27: protocol.PlayerCharacterInfo
	(*CharacterUnlockRequirement)(nil), // 28: protocol.CharacterUnlockRequirement
	(*PlayerProfile)(nil),              // 29: protocol.PlayerProfile
	(*MatchRecord)(nil),                // 30: protocol.MatchRecord
	(*PlayerMatchRecord)(nil),          // 31: protocol.PlayerMatchRecord
	(*PlayerStats)(nil),                // 32: protocol.PlayerStats
	(*LeaderboardEntry)(nil),           // 33: protocol.LeaderboardEntry
	(*GameMapInfo)(nil),                // 34: protocol.GameMapInfo
	(*MatchPreferences)(nil),           // 35: protocol.MatchPreferences
	(*MatchHistory)(nil),               // 36: protocol.MatchHistory
	(*CharacterListResponse)(nil),      // 37: protocol.CharacterListResponse
	(*CharacterDetailResponse)(nil),    // 38: protocol.CharacterDetailResponse
	(*PlayerCharactersResponse)(nil),   // 39: protocol.PlayerCharactersResponse
	(*SetDefaultCharacterRequest)(nil), // 40: protocol.SetDefaultCharacterRequest
	(*PlayerProfileResponse)(nil),      // 41: protocol.PlayerProfileResponse
	(*UpdatePlayerProfileRequest)(nil), // 42: protocol.UpdatePlayerProfileRequest
	(*PlayerStatsResponse)(nil),        // 43: protocol.PlayerStatsResponse
	(*MatchHistoryResponse)(nil),       // 44: protocol.MatchHistoryResponse
	(*LeaderboardResponse)(nil),        // 45: protocol.LeaderboardResponse
	(*SetMatchPreferencesRequest)(nil), // 46: protocol.SetMatchPreferencesRequest
	(*MatchPreferencesResponse)(nil),   // 47: protocol.MatchPreferencesResponse
	(*MatchHistoryListResponse)(nil),   // 48: protocol.MatchHistoryListResponse
	(*SuccessResponse)(nil),            // 49: protocol.SuccessResponse
	(*ErrorResponse)(nil),              // 50: protocol.ErrorResponse
	nil,                                // 51: protocol.PlayerEntityInfo.SkillCooldownsEntry
	nil,                                // 52: protocol.GameFrame.ScoresEntry
}
var file_internal_protocol_message_proto_depIdxs = []int32{
	2,  // 0: protocol.MatchUpdate.status:type_name -> protocol.MatchUpdate.Status
	11, // 1: protocol.RoomInfo.players:type_name -> protocol.RoomPlayerInfo
	0,  // 2: protocol.EntityInfo.type:type_name -> protocol.EntityType
	4,  // 3: protocol.EntityInfo.position:type_name -> protocol.Vector2D
	4,  // 4: protocol.EntityInfo.velocity:type_name -> protocol.Vector2D
	14, // 5: protocol.PlayerEntityInfo.base:type_name -> protocol.EntityInfo
	51, // 6: protocol.PlayerEntityInfo.skill_cooldowns:type_name -> protocol.PlayerEntityInfo.SkillCooldownsEntry
	14, // 7: protocol.ProjectileEntityInfo.base:type_name -> protocol.EntityInfo
	4,  // 8: protocol.MoveOperation.direction:type_name -> protocol.Vector2D
	4,  // 9: protocol.SkillOperation.target:type_name -> protocol.Vector2D
	17, // 10: protocol.PlayerInput.move:type_name -> protocol.MoveOperation
	18, // 11: protocol.PlayerInput.rotate:type_name -> protocol.RotateOperation
	19, // 12: protocol.PlayerInput.skill:type_name -> protocol.SkillOperation
	14, // 13: protocol.GameFrame.entities:type_name -> protocol.EntityInfo
	22, // 14: protocol.GameFrame.collisions:type_name -> protocol.CollisionEvent
	52, // 15: protocol.GameFrame.scores:type_name -> protocol.GameFrame.ScoresEntry
	4,  // 16: protocol.CollisionEvent.position:type_name -> protocol.Vector2D
	24, // 17: protocol.GameResult.players:type_name -> protocol.PlayerResult
	1,  // 18: protocol.SkillInfo.type:type_name -> protocol.SkillType
	25, // 19: protocol.CharacterInfo.skills:type_name -> protocol.SkillInfo
	27, // 20: protocol.PlayerProfile.characters:type_name -> protocol.PlayerCharacterInfo
	26, // 21: protocol.PlayerProfile.default_character:type_name -> protocol.CharacterInfo
	26, // 22: protocol.CharacterListResponse.data:type_name -> protocol.CharacterInfo
	26, // 23: protocol.CharacterDetailResponse.data:type_name -> protocol.CharacterInfo
	27, // 24: protocol.PlayerCharactersResponse.data:type_name -> protocol.PlayerCharacterInfo
	29, // 25: protocol.PlayerProfileResponse.data:type_name -> protocol.PlayerProfile
	32, // 26: protocol.PlayerStatsResponse.data:type_name -> protocol.PlayerStats
	31, // 27: protocol.MatchHistoryResponse.data:type_name -> protocol.PlayerMatchRecord
	33, // 28: protocol.LeaderboardResponse.data:type_name -> protocol.LeaderboardEntry
	35, // 29: protocol.SetMatchPreferencesRequest.preferences:type_name -> protocol.MatchPreferences
	35, // 30: protocol.MatchPreferencesResponse.data:type_name -> protocol.MatchPreferences
	36, // 31: protocol.MatchHistoryListResponse.data:type_name -> protocol.MatchHistory
	32, // [32:32] is the sub-list for method output_type
	32, // [32:32] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_internal_protocol_message_proto_init() }
func file_internal_protocol_message_proto_init() {
	if File_internal_protocol_message_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internal_protocol_message_proto_rawDesc), len(file_internal_protocol_message_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   50,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internal_protocol_message_proto_goTypes,
		DependencyIndexes: file_internal_protocol_message_proto_depIdxs,
		EnumInfos:         file_internal_protocol_message_proto_enumTypes,
		MessageInfos:      file_internal_protocol_message_proto_msgTypes,
	}.Build()
	File_internal_protocol_message_proto = out.File
	file_internal_protocol_message_proto_goTypes = nil
	file_internal_protocol_message_proto_depIdxs = nil
}
